{"version":3,"file":"static/js/597.124b50f4.chunk.js","mappings":"uLAEO,MAAMA,EAAiBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0jC,wBCAjC,MAAMC,EAAgBJ,EAAAA,GAAOK,GAAEH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+iB,aCEtC,MAiBA,EAjBqBG,IAAyC,IAAxC,KAAEC,EAAI,gBAAEC,EAAe,QAAEC,GAASH,EACtD,OACEI,EAAAA,EAAAA,MAACN,EAAa,CAAAO,SAAA,EACZC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAUC,IAAKC,EAASC,IAAKT,EAAKU,QACjDL,EAAAA,EAAAA,KAAA,KAAGC,UAAU,WAAUF,SAAEJ,EAAKU,QAC9BP,EAAAA,EAAAA,MAAA,KAAGG,UAAU,YAAWF,SAAA,CAAC,UAAQJ,EAAKW,UACtCN,EAAAA,EAAAA,KAAA,UACEO,QAASA,IAAMX,EAAgBD,GAC/BM,UAAS,WAAAO,OAAaX,EAAU,QAAU,IAC1CY,SAAUZ,EAAQE,SAEjBF,EAAU,gBAAkB,kBAEjB,ECgFpB,EArFiBa,KACf,MAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAOF,EAAAA,EAAAA,IAAYG,EAAAA,IACnBC,GAAYJ,EAAAA,EAAAA,IAAYK,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,OACVC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAC1CC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,KAEnDG,EAAAA,EAAAA,YAAU,KACgB,IAApBd,EAASe,OACXR,GAASS,EAAAA,EAAAA,OAETH,EAAiBI,EAAYjB,EAAUS,GACzC,GACC,CAACF,EAAUP,EAAUS,IAExB,MAAMxB,EAAmBD,IACnBmB,EAAKe,MAAMC,GAAaA,EAASC,MAAQpC,EAAKoC,OAGlDb,GAASc,EAAAA,EAAAA,IAAUrC,GAAM,EAGrBsC,EAAqBC,IACzBb,EAAgBa,EAAM,EAGlBN,EAAcA,CAACO,EAAOC,IACT,KAAbA,EACKD,EAEFA,EAAME,QAAQ1C,GAASA,EAAKyC,WAAaA,IAGlD,OACEpC,EAAAA,EAAAA,KAACb,EAAc,CAAAY,SACZiB,GACChB,EAAAA,EAAAA,KAACsC,EAAAA,EAAM,KAEPxC,EAAAA,EAAAA,MAAAyC,EAAAA,SAAA,CAAAxC,SAAA,EACEC,EAAAA,EAAAA,KAAA,WAASC,UAAU,gBAAeF,UAChCD,EAAAA,EAAAA,MAAA,MAAIG,UAAU,cAAaF,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaF,UACzBC,EAAAA,EAAAA,KAAA,UACEO,QAASA,IAAM0B,EAAkB,IACjCO,KAAK,SACLvC,UAAU,aAAYF,SACvB,UAIFY,GACC,IAAI,IAAI8B,IAAI9B,EAAS+B,KAAK/C,GAASA,EAAKyC,aAAYM,KACjDN,IACCpC,EAAAA,EAAAA,KAAA,MAAmBC,UAAU,cAAaF,UACxCC,EAAAA,EAAAA,KAAA,UACEO,QAASA,IAAM0B,EAAkBG,GACjCI,KAAK,SACLvC,UAAU,aAAYF,SAErBqC,KANIA,WAanBpC,EAAAA,EAAAA,KAAA,WAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,WAAUF,SACrBwB,EAAcmB,KAAK/C,IAClBK,EAAAA,EAAAA,KAAC2C,EAAY,CAEXhD,KAAMA,EACNC,gBAAiBA,EACjBC,QAASiB,EAAKe,MAAMC,GAAaA,EAASC,MAAQpC,EAAKoC,OAHlDpC,EAAKoC,eAUP,C","sources":["pages/ShopPage.styled.js","components/ListItemShop.styled.js","components/ListItemShop.jsx","pages/ShopPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ShopPageStyled = styled.div`\r\n  display: flex;\r\n  padding: 0px 20px;\r\n\r\n  .shopList {\r\n    display: grid;\r\n    justify-items: center;\r\n    height: 700px;\r\n    grid-template-columns: repeat(5, 1fr);\r\n    gap: 30px;\r\n    padding: 0 20px;\r\n    overflow: auto;\r\n  }\r\n  .shopList::-webkit-scrollbar {\r\n    width: 10px;\r\n    height: 10px;\r\n  }\r\n\r\n  .shopList::-webkit-scrollbar-thumb {\r\n    background: linear-gradient(to bottom right, #0077cc 0%, #33cc33 100%);\r\n    border-radius: 5px;\r\n  }\r\n\r\n  .shopList::-webkit-scrollbar-track {\r\n    background-color: #ddd;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  .sidebarFilter {\r\n  }\r\n  .sidebarList {\r\n    display: flex;\r\n    width: 300px;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    margin-right: 50px;\r\n  }\r\n  .sidebarItem {\r\n  }\r\n  .sidebarBtn {\r\n    width: 100%;\r\n    padding: 20px 50px;\r\n    border-radius: 10px;\r\n    /* background-color: #0077cc; */\r\n    background-color: #33cc33;\r\n    color: #fff;\r\n    transition: all 0.3s;\r\n    &:hover {\r\n      /* background-color: #005599; */\r\n      background-color: #29a329;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ListItemStyle = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  align-items: center;\r\n  .shopImg {\r\n    width: 240px;\r\n    border-radius: 30px;\r\n  }\r\n  .shopName {\r\n  }\r\n  .shopPrice {\r\n  }\r\n  .shopBtn {\r\n    padding: 10px 20px;\r\n    border-radius: 10px;\r\n    /* background-color: #0077cc; */\r\n    background-color: #33cc33;\r\n    color: #fff;\r\n    transition: all 0.3s;\r\n    &:hover {\r\n      /* background-color: #005599; */\r\n      background-color: #29a329;\r\n    }\r\n    &.added {\r\n      background-color: #0077cc;\r\n      cursor: default;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport drugImg from \"../images/drugs-img.jpg\";\r\nimport { ListItemStyle } from \"./ListItemShop.styled\";\r\n\r\nconst ListItemShop = ({ drug, handleAddToCart, isAdded }) => {\r\n  return (\r\n    <ListItemStyle>\r\n      <img className=\"shopImg\" src={drugImg} alt={drug.name} />\r\n      <p className=\"shopName\">{drug.name}</p>\r\n      <p className=\"shopPrice\">Price: {drug.price}</p>\r\n      <button\r\n        onClick={() => handleAddToCart(drug)}\r\n        className={`shopBtn ${isAdded ? \"added\" : \"\"}`}\r\n        disabled={isAdded}\r\n      >\r\n        {isAdded ? \"Added to Cart\" : \"Add to Cart\"}\r\n      </button>\r\n    </ListItemStyle>\r\n  );\r\n};\r\n\r\nexport default ListItemShop;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectCart,\r\n  selectDrugs,\r\n  selectDrugsIsLoading,\r\n} from \"../redux/drugsSelectors\";\r\nimport { addToCart, requestDrugs } from \"../redux/drugsSlice\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ShopPageStyled } from \"./ShopPage.styled\";\r\nimport { Loader } from \"../components/Loader\";\r\nimport ListItemShop from \"../components/ListItemShop\";\r\n\r\nconst ShopPage = () => {\r\n  const allDrugs = useSelector(selectDrugs);\r\n  const cart = useSelector(selectCart);\r\n  const isLoading = useSelector(selectDrugsIsLoading);\r\n  const dispatch = useDispatch();\r\n  const [filterParams, setFilterParams] = useState(\"\");\r\n  const [filteredDrugs, setFilteredDrugs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (allDrugs.length === 0) {\r\n      dispatch(requestDrugs());\r\n    } else {\r\n      setFilteredDrugs(filterDrugs(allDrugs, filterParams));\r\n    }\r\n  }, [dispatch, allDrugs, filterParams]);\r\n\r\n  const handleAddToCart = (drug) => {\r\n    if (cart.some((cartDrug) => cartDrug._id === drug._id)) {\r\n      return;\r\n    }\r\n    dispatch(addToCart(drug));\r\n  };\r\n\r\n  const handleButtonClick = (value) => {\r\n    setFilterParams(value);\r\n  };\r\n\r\n  const filterDrugs = (drugs, shopName) => {\r\n    if (shopName === \"\") {\r\n      return drugs;\r\n    }\r\n    return drugs.filter((drug) => drug.shopName === shopName);\r\n  };\r\n\r\n  return (\r\n    <ShopPageStyled>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <section className=\"sidebarFilter\">\r\n            <ul className=\"sidebarList\">\r\n              <li className=\"sidebarItem\">\r\n                <button\r\n                  onClick={() => handleButtonClick(\"\")}\r\n                  type=\"button\"\r\n                  className=\"sidebarBtn\"\r\n                >\r\n                  All\r\n                </button>\r\n              </li>\r\n              {allDrugs &&\r\n                [...new Set(allDrugs.map((drug) => drug.shopName))].map(\r\n                  (shopName) => (\r\n                    <li key={shopName} className=\"sidebarItem\">\r\n                      <button\r\n                        onClick={() => handleButtonClick(shopName)}\r\n                        type=\"button\"\r\n                        className=\"sidebarBtn\"\r\n                      >\r\n                        {shopName}\r\n                      </button>\r\n                    </li>\r\n                  )\r\n                )}\r\n            </ul>\r\n          </section>\r\n          <section>\r\n            <ul className=\"shopList\">\r\n              {filteredDrugs.map((drug) => (\r\n                <ListItemShop\r\n                  key={drug._id}\r\n                  drug={drug}\r\n                  handleAddToCart={handleAddToCart}\r\n                  isAdded={cart.some((cartDrug) => cartDrug._id === drug._id)}\r\n                />\r\n              ))}\r\n            </ul>\r\n          </section>\r\n        </>\r\n      )}\r\n    </ShopPageStyled>\r\n  );\r\n};\r\n\r\nexport default ShopPage;\r\n"],"names":["ShopPageStyled","styled","div","_templateObject","_taggedTemplateLiteral","ListItemStyle","li","_ref","drug","handleAddToCart","isAdded","_jsxs","children","_jsx","className","src","drugImg","alt","name","price","onClick","concat","disabled","ShopPage","allDrugs","useSelector","selectDrugs","cart","selectCart","isLoading","selectDrugsIsLoading","dispatch","useDispatch","filterParams","setFilterParams","useState","filteredDrugs","setFilteredDrugs","useEffect","length","requestDrugs","filterDrugs","some","cartDrug","_id","addToCart","handleButtonClick","value","drugs","shopName","filter","Loader","_Fragment","type","Set","map","ListItemShop"],"sourceRoot":""}